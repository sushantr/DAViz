{
    "collab_server" : "",
    "contents" : "# The goal of files, like this one, is to introduce you to the\n# R programming language. Let's start with by unraveling a\n# little mystery!\n\n# 1. Run the code below to create the vector 'udacious'.\n# You need to highlight all of the lines of the code and then\n# run it. You should see \"udacious\" appear in the workspace.\n\nudacious <- c(\"Chris Saden\", \"Lauren Castellano\",\n              \"Sarah Spikes\",\"Dean Eckles\",\n              \"Andy Brown\", \"Moira Burke\",\n              \"Kunal Chawla\")\n\n# You should see something like \"chr[1:7]\" in the 'Environment'\n# or 'Workspace' tab. This is because you created a vector with\n# 7 names that have a type of character (strings). The arrow-like\n# '<-' symbol is the assignment operator in R, similar to the\n# equal sign '=' in other programming languages. The c() is a\n# generic function that combines arguments, in this case the\n# names of people, to form a vector.\n\n# A vector is one of the data types in R. Vectors must contain\n# the same type of data, that is the entries must all be of the\n# same type: character, logical (TRUE or FALSE), or numeric.\n\n# HELPFUL TIP: You can add values to a vector.\n# Run each line of code one at a time below to see what is happening.\n\nnumbers <- c(1:10)\n\nnumbers\n\nnumbers <- c(numbers, 11:20)\n\nnumbers\n\n\n# 2. Replace YOUR_NAME with your actual name in the vector\n# 'udacious' and run the code. Be sure to use quotes around it.\n\nudacious <- c(\"Chris Saden\", \"Lauren Castellano\",\n              \"Sarah Spikes\",\"Dean Eckles\",\n              \"Andy Brown\", \"Moira Burke\",\n              \"Kunal Chawla\", \"Susanta Routray\")\n\n# Notice how R updates 'udacious' in the workspace.\n# It should now say something like 'chr[1:8]'.\n\n# 3. Run the following two lines of code. You can highlight both lines\n# of code and run them.\n\nmystery = nchar(udacious)\nmystery\n\n# You just created a new vector called mystery. What do you\n# think is in this vector? (scroll down for the answer)\n\n\n\n\n\n\n\n\n# Mystery is a vector that contains the number of characters\n# for each of the names in udacious, including your name.\n\n# 4. Run this next line of code.\n\nmystery == 11\n\n# Here we get a logical (or boolean) vector that tells us\n# at what locations or indices in the vector where the number\n# of characters for the name is equal to 11.\n\n# 5. Let's use this boolean vector, mystery, to subset our\n# udacious vector. What do you think the result will be when\n# running the line of code below?\n\n# Think about the output before you run this next line of code.\n\nudacious[mystery == 11]\n\n# Scroll down for the answer\n\n\n\n\n\n\n\n\n\n# It's your Udacious Instructors for the course!\n# (and you may be in the output if you're lucky enough\n# to have 11 characters in YOUR_NAME) Either way, we\n# think you're pretty udacious for taking this course.\n\n\n\n\n\n# 6. Alright, all mystery aside...let's dive into some data! Run\n# this next command to load the mtcars data.\n\ndata(mtcars)\n\n# You should see mtcars appear in the 'Environment' tab.\n# R has stored the mtcars data into a spreadsheet-like object\n# called a data frame. Run the next command to see what variables\n# are in the data set.\n\nnames(mtcars)\n\n# names(mtcars) should output all the variable\n# names in the data set. You might notice that the car names\n# are not a variable in the data set. The car names have been saved\n# as row names. More on this later.\n\n# You should also see how many observations (obs.) are in the\n# the data frame and the number of variables on each observation.\n\n# 7. To get more information on the data set and the variables\n# run the this next line of code.\n\n?mtcars\n\n# You can type a '?' before any command or a data set to learn\n# more about it. The details and documentation will appear in\n# the 'Help' tab.\n\n\n# 8. To print out the data, run this next line as code.\n\nmtcars\n\n# Scroll up and down in the console to check out the data.\n# This is the entire data frame printed out.\n\n# 9. Run these next two functions, one at a time,\n# and see if you can figure out what they do.\n\nstr(mtcars)\n\ndim(mtcars)\n\n# Scroll down for the answer.\n\n\n\n\n\n\n\n\n\n# The first command, str(mtcars), gives us the structure of the\n# data frame. It lists the variable names, the type of each variable\n# (all of these variables are numerics) and some values for each\n# variable.\n\n\n# The second command, dim(mtcars), should output '[1] 32 11'\n# to the console. Don't worry about the [1].\n# I'll explain that later.\n\n# 10. Read the documentation for row.names if you're want to know more.\n?row.names\n\n# Run this code to change the row names of the cars to numbers.\nrow.names(mtcars) <- c(1:32)\n\n# Now print out the data frame by running the code below.\nmtcars\n\n# It's tedious to relabel our data frame with the right car names\n# so let's reload the data set and print out the first ten rows.\n\ndata(mtcars)\nhead(mtcars, 10)\n\n# The head() fucntion prints out the first six rows of a data frame\n# by default. Run the code below to see.\nhead(mtcars)\n\n# I think you'll know what this does.\ntail(mtcars, 3)\n\n\n# 11. We've run nine commands so far:\n#      c, nchar, data, str, dim, names, row.names, head, and tail.\n\n# All of these commands took some inputs or arguments.\n# To determine if a command takes more arguments or to learn\n# about any default settings, you can look up the documentation\n# using '?' before the command, much like you did to learn about\n# the mtcars data set and the row.names\n\n\n\n# 12. Let's examine our car data more closely. We can access an\n# an individual variable (or column) from the data frame using\n# the '$' sign. Run the code below to print out the variable\n# miles per gallon. This is the mpg column in the data frame.\n\nmtcars$mpg\n\n# Print out any two other variables to the console.\n\nmtcars$disp\nmtcars$hp\n\n# This is a vector containing the mpg (miles per gallon) of\n# the 32 cars. Run this next line of code to get the average mpg for\n# for all the cars. What is it?\n\n# Enter this number for the quiz on the Udacity website.\n# https://www.udacity.com/course/viewer#!/c-ud651/l-729069797/e-804129314/m-830829287\n\nmean(mtcars$mpg)\n?mean\nx <- c(0:10, 50)\nxm <- mean(x)\nc(xm, mean(x, trim = 0.10))\ngetwd()\n",
    "created" : 1483922718563.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "210250943",
    "id" : "E5CA0AEF",
    "lastKnownWriteTime" : 1484017016,
    "last_content_update" : 1484017016946,
    "path" : "C:/Users/Susanta/Desktop/gaTech/CSE6242_DAV/ClassProjSpring17/demystifying.r",
    "project_path" : "demystifying.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}